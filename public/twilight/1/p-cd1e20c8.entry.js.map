{"version":3,"names":["DisplayType","Currency","sallaProductOptionsCss","SallaProductOptions","constructor","hostRef","this","fileTypes","pdf","png","jpg","word","exl","txt","outSkus","handleDonationOptions","event","detail","type","salla","helpers","inputDigitsOnly","target","emit","id","productId","price","value","preventDefault","stopPropagation","isCustomDonation","donationInput","focus","hideLabel","option","DONATION","donation","can_donate","getExpireDonationMessage","completed","target_amount","collected_amount","h","class","target_message","money","lang","get","getWithDefault","config","canDisabled","onLoaded","outOfStockText","donationAmount","selectDonationAmount","selectAmount","options","setOptionsData","Array","isArray","JSON","parse","e","log","optionsData","url","is_page","api","product","getDetails","then","resp","data","that","_b","_a","details","forEach","Object","entries","skus_availability","filter","sku","map","push","Number","getSelectedOptionsData","selectedOptions","formData","host","getElementSallaData","key","startsWith","replace","reportValidity","requiredElements","querySelectorAll","pass","i","length","hasOutOfStockOption","some","is_out","selectedSkus","every","includes","getSelectedOptions","getOption","option_id","find","invalidHandler","closestProductOption","closest","scrollIntoView","behavior","block","classList","add","changedHandler","optionElement","FILE","IMAGE","MAP","lat","lng","setTimeout","remove","index","findIndex","assign","setSelectedSkus","handleRequiredMultipleOptions","changed","keys","reduce","p","c","MULTIPLE_OPTIONS","required","optionContainer","querySelector","hasChecked","input","toggleAttribute","getLatLng","split","getDisplayForType","COLOR_PICKER","colorPickerOption","multipleOptions","SINGLE_OPTION","singleOption","getOptionShownWhen","visibility_condition","operator","componentWillLoad","cart","getCurrentCartId","componentDidRender","selectedDonationOption","is_selected","additional_price","render","Host","name","splitterOption","htmlFor","placeholder","donationOption","checked","onChange","custom_amount_enabled","shown","ref","el","onInput","onBlur","onInvalid","currency","symbol","fileUploader","additions","height","onAdded","getUploadImageEndpoint","cart_item_id","product_id","onInvalidInput","innerHTML","accept","CameraIcon","FileIcon","imageOption","fileOption","types","Boolean","join","numberOption","textOption","textareaOption","rows","mapOption","zoom","searchable","onSelected","onSubmitted","color","timeOption","noCalendar","enableTime","dateFormat","onPicked","dateOption","minDate","Date","datetimeOption","maxDate","to_date_time","from_date_time","getOptionDetailName","outOfStock","optionType","COLOR","isOptionDetailOut","isDetailSelected","outSelectableSkus","disabled","selected","is_required","colorOption","style","thumbnailOption","option_value","image","src","title","alt","CheckCircleIcon"],"sources":["src/components/salla-product-options/interfaces.ts","src/components/salla-product-options/salla-product-options.scss?tag=salla-product-options","src/components/salla-product-options/salla-product-options.tsx"],"sourcesContent":["export enum DisplayType {\n  COLOR = \"color\",\n  DATE = \"date\",\n  DATETIME = \"datetime\",\n  DONATION = \"donation\",\n  IMAGE = \"image\",\n  MULTIPLE_OPTIONS = \"multiple-options\",\n  NUMBER = \"number\",\n  SINGLE_OPTION = \"single-option\",\n  SPLITTER = \"splitter\",\n  TEXT = \"text\",\n  TEXTAREA = \"textarea\",\n  THUMBNAIL = \"thumbnail\",\n  TIME = \"time\",\n  RADIO = \"radio\",\n  CHECKBOX = \"checkbox\",\n  MAP = \"map\",\n  FILE = \"file\", // similar to image type (file-uploader component)\n  COLOR_PICKER = \"color_picker\"\n\n}\n\nexport interface ProductDetail {\n  id: string;\n  sku: string;\n  name: string;\n  description: string;\n  url: string;\n  promotion_title: string;\n  subtitle: string;\n  type: string;\n  status: string;\n  price: number;\n  sale_price: number;\n  regular_price: number;\n  starting_price: null;\n  quantity: number;\n  max_quantity: number;\n  discount_ends: number;\n  is_taxable: boolean;\n  has_read_more: boolean;\n  can_add_note: boolean;\n  can_show_remained_quantity: boolean;\n  can_upload_file: boolean;\n  has_custom_form: boolean;\n  is_on_sale: boolean;\n  is_hidden_quantity: boolean;\n  is_available: boolean;\n  is_out_of_stock: boolean;\n  weight: null;\n  calories: null;\n  image: SimpleImage;\n  brand: Brand;\n  donation?: ProductDonation;\n  images: Image[];\n  tags: Tag[];\n  notify_availability: null;\n  rating: Rating;\n  options: Option[];\n  sold_quantity: number;\n  category: Category;\n}\n\nexport interface SimpleImage {\n  url: string;\n  alt: string;\n}\n\nexport interface Category {\n  name: string;\n  url: string;\n  icon: string;\n}\n\nexport interface ProductDonation {\n  target_message?: string;\n  collected_amount?: number;\n  target_amount?: number;\n  target_percent?: number;\n  target_end_date?: string;\n  can_donate: boolean;\n  custom_amount_enabled: boolean;\n}\n\nexport interface Image {\n  id: number;\n  url: string;\n  main: boolean;\n  three_d_image_url: string;\n  alt: string;\n  video_url: string;\n  type: string;\n  sort: number;\n}\n\nexport interface Option {\n  id: number;\n  name: string;\n  required: boolean;\n  type: string;\n  placeholder: string;\n  option_type: string;\n  not_same_day_order: boolean;\n  availability_range: number;\n  from_date_time: null;\n  to_date_time: null;\n  visibility_condition?: { option: number, operator: \"=\" | \"!=\", value: number };\n  details?: Detail[];\n  condition_attributes: string;\n  value?: any;\n  donation?: Donation\n}\n\nexport interface Donation {\n  custom_amount_enabled: boolean;\n  target_message?: string;\n  target_date: string | \"2023-04-18\";\n  target_end_date: string | \"2023-04-18\";\n  target_amount: number;\n  collected_amount: number;\n  can_donate: boolean;\n}\n\nexport interface Detail {\n  id: number;\n  option_id: number;\n  name: string;\n  additional_price: number;\n  option_value: null | string;\n  image: null | string;\n  color: null | string;\n  is_out: boolean;\n  skus_availability?: { [sku_id: number]: boolean };\n  is_selected: boolean;\n}\n\nexport interface Brand {\n  id: string;\n  url: string;\n  name: string;\n  logo: string;\n}\n\nexport interface PreTaxPrice {\n  amount: number;\n  currency: Currency;\n}\n\nexport enum Currency {\n  Sar = \"SAR\",\n}\n\nexport interface Promotion {\n  title: string;\n  sub_title: string;\n}\n\nexport interface Rating {\n  count: number;\n  stars: number;\n}\n\nexport interface Tag {\n  name: string;\n  url: string;\n}\n","\n.s-product-options{\n  &-wrapper{\n\n  }\n  &-option-container{\n\n  }\n  &-option{\n\n  }\n  &-option-label{\n\n  }\n  &-option-content{\n\n  }\n  &-colors-wrapper{\n\n  }\n  &-date-element{\n\n  }\n  &-time-element{\n    \n  }\n  &-datetime-element{\n\n  }\n  &-image-input{\n\n  }\n  &-multiple-options-wrapper{\n\n  }\n  &-splitter{\n\n  }\n  &-text{\n\n  }\n  &-textarea{\n\n  }\n  &-thumbnails-wrapper{\n\n  }\n}","import { Component, Prop, h, State, Element, Host, Event, EventEmitter, Method } from '@stencil/core';\nimport { Option, DisplayType, Detail } from './interfaces';\nimport CheckCircleIcon from '../../assets/svg/check.svg';\nimport CameraIcon from '../../assets/svg/camera.svg';\nimport FileIcon from '../../assets/svg/file-upload.svg';\n\n\n@Component({\n  tag: 'salla-product-options',\n  styleUrl: 'salla-product-options.scss',\n})\nexport class SallaProductOptions {\n\n  constructor() {\n    this.canDisabled = !salla.config.get('store.settings.products.notify_options_availability');\n    salla.lang.onLoaded(() => {\n      this.outOfStockText = salla.lang.get(\"pages.products.out_of_stock\");\n      this.donationAmount = salla.lang.get('pages.products.donation_amount');\n      this.selectDonationAmount = salla.lang.getWithDefault('pages.products.select_donation_amount', 'تحديد مبلغ التبرع');\n      this.selectAmount = salla.lang.getWithDefault('pages.products.select_amount', 'اختر المبلغ');\n    });\n\n    if (this.options) {\n      try {\n        this.setOptionsData(Array.isArray(this.options) ? this.options : JSON.parse(this.options));\n        return;\n      } catch (e) {\n        salla.log('Bad json passed via options prop');\n      }\n    }\n    if (!Array.isArray(this.optionsData)) {\n      salla.log('Options is not an array[] ---> ', this.optionsData);\n      this.setOptionsData([]);\n    }\n\n    if (this.productId && !salla.url.is_page('cart')) {\n      salla.api.product.getDetails(this.productId, ['options']).then(resp => this.setOptionsData(resp.data.options));\n    }\n  }\n\n  private setOptionsData(optionsData: Option[]) {\n    this.optionsData = optionsData;\n    let that = this\n    this.optionsData[0]?.details?.forEach(function (detail) {\n      Object.entries(detail.skus_availability || {})\n        .filter(sku => !sku[1])\n        .map(sku => that.outSkus.push(Number(sku[0])));\n    });\n  }\n\n  @Element() host: HTMLElement;\n\n  private fileTypes: Object = {\n    pdf: 'application/pdf',\n    png: 'image/png',\n    jpg: 'image/jpeg',\n    word: 'application/doc,application/ms-doc,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n    exl: 'application/excel,application/vnd.ms-excel,application/x-excel,application/x-msexcel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    txt: 'text/plain',\n  };\n\n  @State() optionsData: Option[];\n  @State() outOfStockText: string = ''\n  @State() donationAmount: string = salla.lang.get('pages.products.donation_amount')\n  @State() selectDonationAmount: string = salla.lang.getWithDefault('pages.products.select_donation_amount', 'تحديد مبلغ التبرع')\n  @State() selectAmount: string = salla.lang.getWithDefault('pages.products.select_amount', 'اختر المبلغ')\n  @State() isCustomDonation: boolean = false;\n  @State() selectedOptions: Array<any> = [];\n  @State() canDisabled: boolean;\n  @State() selectedSkus?: Array<string | number>;\n  @State() selectedOutSkus?: Array<string | number>;\n  private outSkus: Array<string | number> = [];\n  private donationInput?: HTMLInputElement;\n\n  /**\n   * The id of the product to which the options are going to be fetched for.\n   */\n  @Prop() productId: number = salla.config.get('page.id');\n\n  /**\n   * Product detail information.\n   */\n  @Prop() options: string;\n\n  /**\n   * Get the id's of the selected options.\n   * */\n  @Method()\n  async getSelectedOptionsData() {\n    let selectedOptions = {}\n    let formData = (this.host as any).getElementSallaData();\n    formData.forEach(function (value, key) {\n      key.startsWith('options[') && (selectedOptions[key.replace('options[', '').replace(']', '')] = value);\n    });\n    return selectedOptions;\n  }\n\n  /**\n   * Report options form validity.\n   * */\n  @Method()\n  async reportValidity() {\n    let requiredElements: Array<HTMLInputElement> = this.host.querySelectorAll('[required]') as any;\n    let pass = true;\n    for (let i = 0; i < requiredElements.length; i++) {\n      //if there is only one invalid option, return false\n      if ('reportValidity' in requiredElements[i] && !requiredElements[i].reportValidity()) {\n        pass = false;\n      }\n    }\n    return pass;\n  }\n\n  /**\n   * Return true if there is any out of stock options are selected and vise versa.\n   * */\n  @Method()\n  async hasOutOfStockOption() {\n    return this.selectedOptions.some(option => option.is_out) || (this.selectedSkus?.length && this.selectedSkus?.every(sku => this.outSkus.includes(sku)));\n  }\n\n  /**\n   * Get selected options.\n   * */\n  @Method()\n  async getSelectedOptions() {\n    return this.selectedOptions;\n  }\n\n  /**\n   * Get a specific option by its id.\n   * */\n  @Method()\n  async getOption(option_id) {\n    return this.optionsData.find(option => option.id === option_id);\n  }\n\n  /**\n   * An event that emitted when any option is changed.\n   */\n  @Event() changed: EventEmitter;\n\n  // @ts-ignore\n  private invalidHandler(event, option: Option) {\n    const closestProductOption = (event.target as HTMLInputElement).closest('.s-product-options-option') as HTMLElement;\n    if (!salla.url.is_page('cart')) {\n      closestProductOption.scrollIntoView({ behavior: 'smooth', block: 'center' });\n    }\n    closestProductOption.classList.add('s-product-options-option-error');\n  }\n\n  private changedHandler(event, option) {\n    let data = { event: event, option: option, detail: null };\n    if (option.details) {\n      let detail = option.details.find((detail) => {\n        return Number(detail.id) === Number(event.target.value);\n      });\n      data.detail = detail\n    }\n\n    let optionElement = event.target.closest('.s-product-options-option');\n    if (event.target.value\n      || ((option.type == DisplayType.FILE || option.type == DisplayType.IMAGE) && event.type === 'added')\n      || (option.type == DisplayType.MAP && event.type === 'selected' && (event.target.lat && event.target.lng))) {\n      setTimeout(() => {\n        optionElement.classList.remove('s-product-options-option-error');\n      }, 200);\n    }\n\n    const index = this.selectedOptions.findIndex(option => option.option_id === data.option.id);\n    index > -1 ? this.selectedOptions[index] = {\n      ...data.detail,\n      option_id: data.option.id\n    } : this.selectedOptions.push({ ...data.detail, option_id: data.option.id })\n\n    if (option.type == DisplayType.DONATION) {\n      salla.event.emit('product-options::donation-changed', {\n        id: this.productId,\n        price: event.target.value\n      });\n    }\n    this.setSelectedSkus();\n    this.handleRequiredMultipleOptions(option);\n    this.changed.emit(data);\n    salla.event.emit('product-options::change', data);\n  }\n\n\n  private handleDonationOptions = (event, detail, type) => {\n    if (detail == 'custom' && type == 'input') {\n      salla.helpers.inputDigitsOnly(event.target)\n      salla.event.emit('product-options::donation-changed', {\n        id: this.productId,\n        price: event.target.value\n      });\n      return;\n    }\n    event.preventDefault();\n    event.stopPropagation();\n    this.isCustomDonation = event.target.value === 'custom';\n    if (this.donationInput) {\n      if (event.target.value === 'custom') {\n        this.donationInput.value = '';\n        this.donationInput.focus()\n      } else {\n        this.donationInput.value = event.target.value;\n      }\n      if (detail == 'custom') {\n        return\n      }\n      salla.event.emit('product-options::donation-changed', {\n        id: this.productId,\n        price: event.target.value\n      });\n    }\n  }\n\n  private hideLabel = (option) => {\n    if (option.type === DisplayType.DONATION && (option.donation && !option.donation.can_donate)) {\n      return true;\n    }\n    return false;\n  }\n\n  private getExpireDonationMessage = (option) => {\n    if (!option.donation) {\n      return;\n    }\n    let completed = option.donation.target_amount <= option.donation.collected_amount;\n    return <div class={{ \"s-product-options-donation-message\": true, \"s-product-options-donation-completed\": completed, \"s-product-options-donation-expired\": !completed }}>\n      <p>{option.donation.target_message}</p>\n      <span>{completed ? salla.money(option.donation.target_amount) : ''}</span>\n    </div>\n  }\n  /**\n   * loop throw all selected details, then get common sku, if it's only one, means we selected all of them;\n   */\n  private setSelectedSkus() {\n    this.selectedSkus = this.selectedOptions.map(detail => Object.keys(detail.skus_availability || {}))\n      .reduce((p, c) => p.filter(e => c.includes(e)))\n      .map(sku => Number(sku));\n  }\n\n  private handleRequiredMultipleOptions(option) {\n    if (option.type !== DisplayType.MULTIPLE_OPTIONS || !option.required) {\n      return;\n    }\n    const optionContainer = this.host.querySelector(`[data-option-id=\"${option.id}\"]`);\n    const hasChecked = optionContainer.querySelectorAll('input:checked').length;\n    optionContainer.querySelectorAll('input').forEach(input => input.toggleAttribute('required', !hasChecked));\n  }\n\n  private getLatLng(value, type: 'lat' | 'lng') {\n    return value\n      ? value.split(',')[type == 'lat' ? 0 : 1]\n      : '';\n  }\n\n  private getDisplayForType(option: Option) {\n    if (this[`${option.type}Option`]) {\n      return this[`${option.type}Option`](option);\n    }\n\n    if (option.type === DisplayType.COLOR_PICKER) {\n      return this.colorPickerOption(option)\n    }\n\n    if (option.type === DisplayType.MULTIPLE_OPTIONS) {\n      return this.multipleOptions(option);\n    }\n\n    if (option.type === DisplayType.SINGLE_OPTION) {\n      return this.singleOption(option);\n    }\n    salla.log(`Couldn't find options type(${option.type})😢`);\n    return '';\n  }\n\n  protected getOptionShownWhen(option: Option) {\n    return option.visibility_condition\n      ? { \"data-show-when\": `options[${option.visibility_condition.option}] ${option.visibility_condition.operator} ${option.visibility_condition.value}` }\n      : {};\n  }\n\n  //we need the cart Id for productOption Image\n  componentWillLoad() {\n    this.outOfStockText = salla.lang.get('pages.products.out_of_stock')\n    return salla.api.cart.getCurrentCartId();\n  }\n\n  componentDidRender() {\n      if (this.optionsData?.length == 0 && !this.optionsData.some(option => option.type == DisplayType.DONATION)) {\n        return;\n      }\n      let selectedDonationOption =  this.optionsData.find(option => option.type == DisplayType.DONATION)?.details.find(detail => detail.is_selected);\n      if (!selectedDonationOption) {\n        return;\n      }\n      setTimeout(() => {\n        salla.event.emit('product-options::donation-changed', {\n          id: this.productId,\n          price: selectedDonationOption.additional_price\n        });\n      }, 1000);\n  }\n\n  render() {\n    if (this.optionsData?.length == 0) {\n      return;\n    }\n\n    return (\n      <Host class=\"s-product-options-wrapper\">\n        {/* TODO:: move salla-conditional-field logic to here, no need of another component*/}\n        <salla-conditional-fields>\n          {this.optionsData.map((option: Option) =>\n            <div class={`s-product-options-option-container${option.visibility_condition ? ' hidden' : ''}`}\n              data-option-id={option.id}\n              {...this.getOptionShownWhen(option)}>\n              {option.name == 'splitter' ?\n                this.splitterOption()\n                : <div class=\"s-product-options-option\" data-option-type={option.type}\n                  data-option-required={`${option.required}`}>\n                  <label htmlFor={'options[' + option.id + ']'} class={`s-product-options-option-label ${this.hideLabel(option) ? 's-product-options-option-label-hidden' : ''}`}>\n                    <b>\n                      {option.name}\n                      {option.required && <span> * </span>} </b>\n                    <small>{option.placeholder}</small>\n                  </label>\n                  <div class={`s-product-options-option-content ${this.hideLabel(option) ? 's-product-options-option-content-full-width' : ''}`}>\n                    {this.getDisplayForType(option)}\n                  </div>\n                </div>}\n            </div>\n          )}\n        </salla-conditional-fields>\n      </Host>\n    );\n\n  }\n\n  //@ts-ignore\n  private donationOption(option: Option, product: Product) {\n    return <div class=\"s-product-options-donation-wrapper\">\n\n      {option.donation?.can_donate ? [\n        option.donation ?\n          <div class=\"s-product-options-donation-progress\">\n            <salla-progress-bar donation={option.donation}>\n            </salla-progress-bar>\n          </div>\n          : '',\n        option.details.length ?\n          [<h4>{this.selectAmount}</h4>,\n          <div class=\"s-product-options-donation-options\">\n            {option.details.map((detail, i) =>\n              <div class=\"s-product-options-donation-options-item\">\n                <input id={`donation-option-${i}`} type=\"radio\" name=\"donating_option\" checked={detail.is_selected} value={detail.additional_price} onChange={e => this.handleDonationOptions(e, detail, 'option')} />\n                <label htmlFor={`donation-option-${i}`}>\n                  <span>{salla.money(detail.name)}</span>\n                </label>\n              </div>\n            )}\n            {option.donation?.custom_amount_enabled ?\n              <div class=\"s-product-options-donation-options-item\">\n                <input id={`donation-option-custom`} type=\"radio\" name=\"donating_option\" value=\"custom\" onChange={e => this.handleDonationOptions(e, 'custom', 'option')} />\n                <label htmlFor={`donation-option-custom`}>\n                  <span> {this.selectDonationAmount} </span>\n                </label>\n              </div>\n              : ''\n            }\n          </div>] : '',\n\n        <div class={{ \"s-product-options-donation-input-group\": true, \"shown\": !option.details.length || (option.details.length && this.isCustomDonation) }}>\n          <input\n            type=\"text\"\n            id=\"donating-amount\"\n            name=\"donation_amount\"\n            class=\"s-form-control\"\n            ref={el => this.donationInput = el as HTMLInputElement}\n            value={\n              option.details.length\n                && option.details.some(detail => detail.is_selected)\n                ? option.details.find(detail => detail.is_selected).additional_price\n                : option.value}\n            // required\n            placeholder={option.placeholder}\n            onInput={e => this.handleDonationOptions(e, 'custom', 'input')}\n            onBlur={e => this.changedHandler(e, option)}\n            onInvalid={(e) => this.invalidHandler(e, option)}\n          />\n          {/* value={option.value} */}\n          <span class=\"s-product-options-donation-amount-currency\">\n            {salla.config.currency(salla.config.get('user.currency_code')).symbol}\n          </span>\n        </div>\n      ] :\n        this.getExpireDonationMessage(option)\n      }\n    </div>\n  }\n\n  private fileUploader(option: Option, additions: Object | null = null) {\n    return <salla-file-upload\n      {...(additions || {})}\n      payload-name=\"file\"\n      value={option.value}\n      instant-upload={true}\n      name={`options[${option.id}]`}\n      required={!option.visibility_condition && option.required}\n      height=\"120px\"\n      onAdded={(e) => this.changedHandler(e, option)}\n      url={salla.cart.api.getUploadImageEndpoint()}\n      form-data={{ cart_item_id: this.productId, product_id: this.productId }}\n      onInvalidInput={(e) => this.invalidHandler(e, option)}\n      class={{ \"s-product-options-image-input\": true, required: option.required }}\n    >\n      <div class=\"s-product-options-filepond-placeholder\">\n        <span class=\"s-product-options-filepond-placeholder-icon\"\n          innerHTML={(additions as any).accept && (additions as any).accept.split(',').every(type => type.includes('image'))\n            ? CameraIcon\n            : FileIcon}\n        />\n        <p class=\"s-product-options-filepond-placeholder-text\">{salla.lang.get('common.uploader.drag_and_drop')}</p>\n        <span class=\"filepond--label-action\">{salla.lang.get('common.uploader.browse')}</span>\n      </div>\n    </salla-file-upload>\n  }\n\n  //@ts-ignore\n  private imageOption(option: Option) {\n    return this.fileUploader(option, { accept: 'image/png,image/jpeg,image/jpg,image/gif' });\n  }\n\n  //@ts-ignore\n  private fileOption(option: Option) {\n    let types = option.details.map(detail => this.fileTypes[detail.name]).filter(Boolean);\n    return types?.length\n      ? this.fileUploader(option, { accept: types.join(',') })\n      : 'File types not selected.';\n  }\n\n  // TODO: (ONLY FOR TESTING!) find a better way to make it testable, e.g. wrap it with a unique class like textOption\n  //@ts-ignore\n  private numberOption(option: Option) {\n    return <input\n      type=\"text\"\n      value={option.value}\n      class=\"s-form-control\"\n      required={!option.visibility_condition && option.required}\n      name={`options[${option.id}]`}\n      placeholder={option.placeholder}\n      onBlur={e => this.changedHandler(e, option)}\n      onInvalid={(e) => this.invalidHandler(e, option)}\n      onInput={e => salla.helpers.inputDigitsOnly(e.target)} />\n  }\n\n  //@ts-ignore\n  private splitterOption() {\n    return <div class=\"s-product-options-splitter\" />\n  }\n\n  //@ts-ignore\n  private textOption(option: Option) {\n    return <div class=\"s-product-options-text\">\n      <input\n        type=\"text\"\n        value={option.value}\n        class='s-form-control'\n        required={!option.visibility_condition && option.required}\n        name={`options[${option.id}]`}\n        placeholder={option.placeholder}\n        onInvalid={(e) => this.invalidHandler(e, option)}\n        onInput={e => this.changedHandler(e, option)} />\n    </div>\n  }\n\n  //@ts-ignore\n  private textareaOption(option: Option) {\n    //todo::remove mt-1 class, and if it's okay to remove the tag itself will be great\n    return <div class=\"s-product-options-textarea\">\n      <div class=\"mt-1\">\n        <textarea\n          rows={4}\n          value={option.value}\n          class=\"s-form-control\"\n          required={!option.visibility_condition && option.required}\n          id={`options[${option.id}]`}\n          name={`options[${option.id}]`}\n          placeholder={option.placeholder}\n          onInvalid={(e) => this.invalidHandler(e, option)}\n          onInput={(e) => this.changedHandler(e, option)} />\n      </div>\n    </div>\n  }\n\n  //@ts-ignore\n  private mapOption(option: Option) {\n    return <salla-map\n      zoom={15}\n      lat={this.getLatLng(option.value, 'lat')}\n      lng={this.getLatLng(option.value, 'lng')}\n      name={`options[${option.id}]`}\n      searchable={true}\n      required={option.required}\n      onInvalidInput={(e) => this.invalidHandler(e, option)}\n      onSelected={e => this.changedHandler(e, option)} />\n  }\n\n  private colorPickerOption(option: Option) {\n    return <salla-color-picker\n      onSubmitted={e => this.changedHandler(e, option)}\n      name={`options[${option.id}]`}\n      required={!option.visibility_condition && option.required}\n      onInvalidInput={(e) => this.invalidHandler(e, option)}\n      color={option.value} />\n  }\n\n  /**\n   * ============= Date Time options =============\n   */\n  //@ts-ignore\n  private timeOption(option: Option) {\n    return <salla-datetime-picker\n      noCalendar={true}\n      enableTime={true}\n      dateFormat=\"h:i K\"\n      value={option.value}\n      placeholder={option.name}\n      required={!option.visibility_condition && option.required}\n      name={`options[${option.id}]`}\n      class=\"s-product-options-time-element\"\n      onInvalidInput={(e) => this.invalidHandler(e, option)}\n      onPicked={e => this.changedHandler(e, option)} />\n  }\n\n  //@ts-ignore\n  private dateOption(option: Option) {\n    //todo:: consider date-range @see https://github.com/SallaApp/theme-raed/blob/master/src/assets/js/partials/product-options.js#L8-L23\n    return <div class=\"s-product-options-date-element\">\n      <salla-datetime-picker\n        value={option.value}\n        placeholder={option.name}\n        required={!option.visibility_condition && option.required}\n        minDate={new Date()}\n        name={`options[${option.id}]`}\n        onInvalidInput={(e) => this.invalidHandler(e, option)}\n        onPicked={e => this.changedHandler(e, option)} />\n    </div>\n  }\n\n  //@ts-ignore\n  private datetimeOption(option: Option) {\n    //todo:: consider date-range @see https://github.com/SallaApp/theme-raed/blob/master/src/assets/js/partials/product-options.js#L8-L23\n    return <div class=\"s-product-options-datetime-element\">\n      <salla-datetime-picker\n        enableTime={true}\n        value={option.value}\n        dateFormat=\"Y-m-d G:i:K\"\n        placeholder={option.name}\n        required={!option.visibility_condition && option.required}\n        name={`options[${option.id}]`}\n        maxDate={option.to_date_time}\n        minDate={option.from_date_time}\n        onInvalidInput={(e) => this.invalidHandler(e, option)}\n        onPicked={e => this.changedHandler(e, option)} />\n    </div>\n  }\n\n  /**\n   * ============= Advanced options =============\n   */\n  protected getOptionDetailName(detail: Detail, outOfStock: boolean = true, optionType?: string) {\n    if (optionType && optionType == DisplayType.COLOR) {\n      return detail.name\n        + ((outOfStock && this.isOptionDetailOut(detail)) ? ` <br/> <p> ${this.outOfStockText} </p>` : '')\n        + (detail.additional_price ? ` <p> (${salla.money(detail.additional_price)}) </p>` : '');\n    }\n\n    return detail.name\n      + ((outOfStock && this.isOptionDetailOut(detail)) ? ` - ${this.outOfStockText}` : '')\n      + (detail.additional_price ? ` (${salla.money(detail.additional_price)})` : '');\n  }\n\n\n  protected isOptionDetailOut(detail: Detail) {\n    if (detail.is_out || !detail.skus_availability || !this.selectedSkus?.length) {\n      return detail.is_out;\n    }\n\n    let isDetailSelected = this.selectedOptions.filter(option => option.id == detail.id).length;\n    //if the current options is the only selected option, so we are sure that it's not out, because there is no other options selected yet\n    if (isDetailSelected && this.selectedOptions.length == 1) {\n      return false;\n    }\n\n    //if current details has sku in the possible outSkus it's out for sure\n    if (isDetailSelected) {\n      //here we will get the possible outSkus for current selected options\n      let outSelectableSkus = this.selectedSkus.filter(sku => this.outSkus.includes(sku));\n      return Object.keys(detail.skus_availability).some(sku => outSelectableSkus.includes(Number(sku)))\n    }\n\n    return this.selectedOptions.some(option => option.is_out && option.option_id !== detail.option_id)\n\n  }\n\n  private singleOption(option: Option) {\n    return <div>\n      <select name={`options[${option.id}]`}\n        required={!option.visibility_condition && option.required}\n        class=\"s-form-control\"\n        onInvalid={(e) => this.invalidHandler(e, option)}\n        onChange={e => this.changedHandler(e, option)}>\n        <option value=\"\">{option.placeholder}</option>\n        {\n          option?.details.map((detail: Detail) => {\n            return <option value={detail.id} disabled={this.canDisabled && this.isOptionDetailOut(detail)}\n              selected={detail.is_selected}>\n              {this.getOptionDetailName(detail)}\n            </option>\n          })\n        }\n      </select>\n    </div>\n  }\n\n  private multipleOptions(option: Option) {\n    let is_required = option.required && !option.details.some(detail => detail.is_selected) && !option.visibility_condition;\n    return <div class={{ \"s-product-options-multiple-options-wrapper\": true, 'required': option.required }}>\n      {\n        option?.details.map((detail: Detail) => {\n          return <div>\n            <input type=\"checkbox\"\n              value={detail.id}\n              disabled={this.isOptionDetailOut(detail)}\n              checked={detail.is_selected}\n              required={is_required}\n              name={`options[${option.id}][]`}\n              id={`field-${option.id}-${detail.id}`}\n              onChange={(e) => this.changedHandler(e, option)}\n              onInvalid={(e) => this.invalidHandler(e, option)}\n              aria-describedby={`options[${option.id}]-description`} />\n            <label htmlFor={`field-${option.id}-${detail.id}`}>{this.getOptionDetailName(detail)}</label>\n          </div>\n        })\n      }\n    </div>\n  }\n\n  //@ts-ignore\n  private colorOption(option: Option) {\n    return <fieldset class=\"s-product-options-colors-wrapper\">\n      {\n        option?.details.map((detail) =>\n          <div class=\"s-product-options-colors-item\">\n            <input type=\"radio\"\n              value={detail.id}\n              required={!option.visibility_condition && option.required}\n              checked={detail.is_selected}\n              name={`options[${option.id}]`}\n              disabled={this.canDisabled && this.isOptionDetailOut(detail)}\n              id={`color-${this.productId}-${option.id}-${detail.id}`}\n              onInvalid={(e) => this.invalidHandler(e, option)}\n              onChange={e => this.changedHandler(e, option)} />\n            <label htmlFor={`color-${this.productId}-${option.id}-${detail.id}`}>\n              <span style={{ \"background-color\": detail.color }} />\n              <div innerHTML={this.getOptionDetailName(detail, true, option.type)}></div>\n            </label>\n          </div>\n        )\n      }\n    </fieldset>\n  }\n\n  //@ts-ignore\n  private thumbnailOption(option: Option) {\n    return <div class=\"s-product-options-thumbnails-wrapper\">\n      {option.details.map((detail: Detail) => {\n        return <div>\n          <input type=\"radio\"\n            value={detail.id}\n            data-itemid={detail.id} //todo:: why need this? it's already in the value!\n            required={!option.visibility_condition && option.required}\n            checked={detail.is_selected}\n            name={`options[${option.id}]`}\n            data-img-id={detail.option_value}\n            disabled={this.canDisabled && this.isOptionDetailOut(detail)}\n            id={`option_${this.productId}-${option.id}_${detail.id}`}\n            onInvalid={(e) => this.invalidHandler(e, option)}\n            onChange={(e) => this.changedHandler(e, option)} />\n          <label htmlFor={`option_${this.productId}-${option.id}_${detail.id}`}\n            data-img-id={detail.option_value}\n            class=\"go-to-slide\">\n            <img data-src={detail.image} src={detail.image} title={detail.name} alt={detail.name} />\n            <span innerHTML={CheckCircleIcon} class=\"s-product-options-thumbnails-icon\" />\n            {this.isOptionDetailOut(detail) ?\n              [\n                <small class=\"s-product-options-thumbnails-stock-badge\">{this.outOfStockText}</small>,\n                this.canDisabled ? <div class=\"s-product-options-thumbnails-badge-overlay\" /> : '',\n              ]\n              : ''}\n          </label>\n          <p>{this.getOptionDetailName(detail, false)} </p>\n        </div>\n      })}\n    </div>\n  }\n}\n"],"mappings":"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"}