{"version":3,"names":["sallaContactsCss","SallaContacts","exports","class_1","hostRef","_this","this","salla","config","get","mobile","whatsapp","phone","telegram","email","contactSlot","_a","host","querySelector","innerHTML","concat","iconsOnly","onReady","contacts","lang","onLoaded","contactsTitle","prototype","getContactsArray","Object","entries","filter","_b","_key","value","map","type","getContactLink","url","getContactIcon","iconsList","render","contactsArray","isHeader","length","h","Host","class","contact","index","href","key","hideTitle","horizontal","id","replace","toString","componentDidRender","remove"],"sources":["src/components/salla-contacts/salla-contacts.scss?tag=salla-contacts","src/components/salla-contacts/salla-contacts.tsx"],"sourcesContent":[".unicode {\n  unicode-bidi: plaintext;\n}","import { Component, Host, h, Prop, State, Element } from '@stencil/core';\nimport mobile from '../../assets/svg/iphone.svg';\nimport whatsapp from '../../assets/svg/whatsapp2.svg';\nimport phone from '../../assets/svg/phone.svg';\nimport telegram from '../../assets/svg/paper-plane-o.svg';\nimport email from '../../assets/svg/mail.svg';\n/**\n * @slot contact - Replaces contact item, has replaceable props `{icon}`, `{value}`.\n */\n@Component({\n  tag: 'salla-contacts',\n  styleUrl: 'salla-contacts.scss',\n})\nexport class SallaContacts {\n  constructor() {\n    this.contactSlot = this.host.querySelector('[slot=\"contact\"]')?.innerHTML || `<a href={link} class=\"s-contacts-item\"><span class=\"s-contacts-icon\">{icon}</span>${!this.iconsOnly && \"<span class='unicode'>{value}</span>\"}</a>`;\n\n    salla.onReady(() => {\n      this.contacts = salla.config.get('store.contacts');\n    });\n\n    salla.lang.onLoaded(() => {\n      this.contactsTitle =  this.contactsTitle || salla.lang.get('blocks.footer.social');\n    });\n  }\n  private readonly contactSlot: string;\n\n  /**\n   * Section title for social block of footer.\n   */\n  @Prop({mutable: true}) contactsTitle: string;\n\n  /**\n   * Flag to toggle title visibility.\n   */\n  @Prop() hideTitle: boolean;\n\n  /**\n   * Conditional flag to check whether the content is header or not.\n   */\n  @Prop() isHeader: boolean;\n\n  /**\n   * Flag to toggle list of contents whether vertical or horizontal.\n   */\n  @Prop() horizontal: boolean;\n\n  /**\n   * Flag condition to show icon only or icon with label\n   */\n  @Prop() iconsOnly: boolean;\n\n\n  @Element() host: HTMLElement;\n  @State() contacts: any = salla.config.get('store.contacts');\n  @State() iconsList: any = { mobile, whatsapp, phone, telegram, email }\n\n  private getContactsArray() {\n    return Object.entries(this.contacts)\n      .filter(([_key, value]) => value !== '')\n      .map(([type, value]) => ({ type, value }));\n  }\n\n  private getContactLink(type) {\n    switch (type) {\n      case 'phone':\n        return `tel:${this.contacts[type]}`; \n      case 'mobile':\n        return `tel:${this.contacts[type]}`;\n      case 'whatsapp':\n        return salla.url.get('whatsapp/send');\n      case 'email':\n        return `mailto:${this.contacts[type]}`;\n      case 'telegram':\n        return `https://t.me/${this.contacts[type]}`;\n      default:\n        return this.contacts[type];\n    }\n  }\n\n  private getContactIcon(type) {\n    return this.iconsList[type];\n  }\n  render() {\n    const contactsArray = this.getContactsArray();\n    if (this.isHeader && contactsArray && contactsArray.length > 0) {\n      return (\n        <Host class=\"s-contacts s-contacts-header\">\n          {contactsArray.filter((contact) => contact.type == 'phone' || contact.type == 'email').map((contact, index) => (\n            <a href={this.getContactLink(contact.type)} key={index} class=\"s-contacts-topnav-link\">\n              {contact.type === 'email' ? (\n                contact.value\n              ) : (\n                [\n                  <span>{this.contactsTitle}: </span>,\n                  <a class=\"unicode\" href={this.iconsList[contact.type]}>{contact.value}</a>\n                ]\n              )}\n            </a>\n          ))}\n        </Host>\n      );\n    }\n    return (\n      <Host class=\"s-contacts\">\n        {!this.hideTitle && <h3 class=\"s-contacts-title\">{this.contactsTitle}</h3>}\n        <div class={{\n          's-contacts-list': true,\n          's-contacts-list-horizontal': this.horizontal,\n          's-contacts-list-vertical': !this.horizontal,\n          's-contacts-list-icons-only': this.iconsOnly\n        }\n        }>\n          {contactsArray.map((contact, index) => (\n            <div key={index} id=\"contact-slot\" innerHTML={this.contactSlot\n              .replace(/\\{icon\\}/g, this.getContactIcon(contact.type))\n              .replace(/\\{value\\}/g, contact.value.toString())\n              .replace(/\\{link\\}/g, this.getContactLink(contact.type))}>\n            </div>\n          ))}\n        </div>\n      </Host>\n    );\n  }\n  componentDidRender() {\n    // this.host.querySelectorAll('#contact-slot').forEach(el => el.replaceWith(el.firstChild));\n    this.host.querySelector('[slot=\"contact\"]')?.remove();\n  }\n}\n\n"],"mappings":";;;8sIAAA,IAAMA,EAAmB,kE,ICaZC,EAAaC,EAAA,4BACxB,SAAAC,EAAAC,GAAA,IAAAC,EAAAC,K,+JAwCyBC,MAAMC,OAAOC,IAAI,kB,eAChB,CAAEC,OAAMA,EAAEC,SAAQA,EAAEC,MAAKA,EAAEC,SAAQA,EAAEC,MAAKA,GAxClER,KAAKS,cAAcC,EAAAV,KAAKW,KAAKC,cAAc,uBAAmB,MAAAF,SAAA,SAAAA,EAAEG,YAAa,qFAAAC,QAAsFd,KAAKe,WAAa,uCAAsC,QAE3Nd,MAAMe,SAAQ,WACZjB,EAAKkB,SAAWhB,MAAMC,OAAOC,IAAI,iB,IAGnCF,MAAMiB,KAAKC,UAAS,WAClBpB,EAAKqB,cAAiBrB,EAAKqB,eAAiBnB,MAAMiB,KAAKf,IAAI,uB,IAmCvDN,EAAAwB,UAAAC,iBAAA,WACN,OAAOC,OAAOC,QAAQxB,KAAKiB,UACxBQ,QAAO,SAACC,G,IAACC,EAAID,EAAA,GAAEE,EAAKF,EAAA,GAAM,OAAAE,IAAU,EAAV,IAC1BC,KAAI,SAACH,G,IAACI,EAAIJ,EAAA,GAAEE,EAAKF,EAAA,GAAC,OAAQI,KAAIA,EAAEF,MAAKA,EAAnB,G,EAGf/B,EAAAwB,UAAAU,eAAA,SAAeD,GACrB,OAAQA,GACN,IAAK,QACH,MAAO,OAAAhB,OAAOd,KAAKiB,SAASa,IAC9B,IAAK,SACH,MAAO,OAAAhB,OAAOd,KAAKiB,SAASa,IAC9B,IAAK,WACH,OAAO7B,MAAM+B,IAAI7B,IAAI,iBACvB,IAAK,QACH,MAAO,UAAAW,OAAUd,KAAKiB,SAASa,IACjC,IAAK,WACH,MAAO,gBAAAhB,OAAgBd,KAAKiB,SAASa,IACvC,QACE,OAAO9B,KAAKiB,SAASa,G,EAInBjC,EAAAwB,UAAAY,eAAA,SAAeH,GACrB,OAAO9B,KAAKkC,UAAUJ,E,EAExBjC,EAAAwB,UAAAc,OAAA,eAAApC,EAAAC,KACE,IAAMoC,EAAgBpC,KAAKsB,mBAC3B,GAAItB,KAAKqC,UAAYD,GAAiBA,EAAcE,OAAS,EAAG,CAC9D,OACEC,EAACC,EAAI,CAACC,MAAM,gCACTL,EAAcX,QAAO,SAACiB,GAAY,OAAAA,EAAQZ,MAAQ,SAAWY,EAAQZ,MAAQ,OAA3C,IAAoDD,KAAI,SAACa,EAASC,GAAK,OACxGJ,EAAA,KAAGK,KAAM7C,EAAKgC,eAAeW,EAAQZ,MAAOe,IAAKF,EAAOF,MAAM,0BAC3DC,EAAQZ,OAAS,QAChBY,EAAa,OAGXH,EAAA,YAAOxC,EAAKqB,cAAa,MACzBmB,EAAA,KAAGE,MAAM,UAAUG,KAAM7C,EAAKmC,UAAUQ,EAAQZ,OAAQY,EAAQd,QAPkC,I,CAehH,OACEW,EAACC,EAAI,CAACC,MAAM,eACRzC,KAAK8C,WAAaP,EAAA,MAAIE,MAAM,oBAAoBzC,KAAKoB,eACvDmB,EAAA,OAAKE,MAAO,CACV,kBAAmB,KACnB,6BAA8BzC,KAAK+C,WACnC,4BAA6B/C,KAAK+C,WAClC,6BAA8B/C,KAAKe,YAGlCqB,EAAcP,KAAI,SAACa,EAASC,GAAK,OAChCJ,EAAA,OAAKM,IAAKF,EAAOK,GAAG,eAAenC,UAAWd,EAAKU,YAChDwC,QAAQ,YAAalD,EAAKkC,eAAeS,EAAQZ,OACjDmB,QAAQ,aAAcP,EAAQd,MAAMsB,YACpCD,QAAQ,YAAalD,EAAKgC,eAAeW,EAAQZ,QAJpB,K,EAW1CjC,EAAAwB,UAAA8B,mBAAA,W,OAEEzC,EAAAV,KAAKW,KAAKC,cAAc,uBAAmB,MAAAF,SAAA,SAAAA,EAAE0C,Q,yHAjHvB,I"}