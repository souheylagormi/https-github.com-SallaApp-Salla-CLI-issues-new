{"version":3,"names":["sallaFiltersCss","SallaFilters","constructor","hostRef","this","isReady","salla","event","on","host","style","display","lang","onLoaded","apply","get","reset","filters","freshFilterData","map","filter","label","category_id","brand_id","rating","price","key","type","FilterOptionTypes","VALUES","max","min","values","stars","filtersData","variants","VARIANTS","searchParams","URLSearchParams","window","location","search","hasFilters","keys","includes","config","Object","length","currentUrl","href","filterValue","separator","indexOf","newUrl","history","pushState","path","childNodes","forEach","async","widget","setWidgetHeight","componentWillLoad","Helper","extractFiltersFromUrl","e","console","warn","message","getFilters","applyFilters","setTimeout","url","URL","entries","startsWith","delete","encodedFilterValues","encodeFilters","sanitizedFilterValues","split","item","join","_a","toString","emit","changed","parentKey","encodedFilters","prototype","hasOwnProperty","call","value","fullKey","Array","isArray","i","push","result","resetFilters","removeFiltersQueryParams","from","encodeURIComponent","finalUrl","pathname","handleOptionChange","option","RANGE","isChecked","target","checked","val","render","h","Host","onChanged","detail","_b","class","color","fill","onClick","componentDidLoad"],"sources":["src/components/salla-filters/salla-filters.scss?tag=salla-filters","src/components/salla-filters/salla-filters.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n\n.s-rating-stars-small {\n  line-height: 12px;\n}\n.s-filters-radio{\n  background-image: none !important;\n}","import { Component, Element, h, Event, EventEmitter, Host, Method, Prop, State } from '@stencil/core';\nimport { Filter, FilterOptionTypes } from \"./interfaces\";\nimport Helper from '../../Helpers/Helper';\n@Component({\n  tag: 'salla-filters',\n  styleUrl: 'salla-filters.scss',\n})\nexport class SallaFilters {\n\n  constructor() {\n    salla.event.on('filters::hidden', () => this.host.style.display = 'none');\n\n    salla.lang.onLoaded(() => {\n      this.apply = salla.lang.get('pages.checkout.apply');\n      this.reset = salla.lang.get('pages.categories.filters_reset');\n    });\n\n    salla.event.on('filters::fetched', ({ filters }) => {\n      this.host.style.display = '';\n      let freshFilterData: any = {};\n      this.filters = filters\n        .map((filter: Filter) => {\n          filter.label = {\n            category_id: salla.lang.get('common.titles.categories'),\n            brand_id: salla.lang.get('common.titles.brands'),\n            rating: salla.lang.get('pages.categories.filter_rating'),\n            price: salla.lang.get('pages.categories.filter_price'),\n          }[filter.key] || filter.label;\n          // filter.type = FilterOptionTypes.VALUES;\n          if (filter.key == 'rating') {\n            filter.type = FilterOptionTypes.VALUES;\n            //@ts-ignore\n            let { max, min } = filter.values;\n            //@ts-ignore\n            filter.values = [5, 4, 3, 2, 1].filter(stars => stars >= min || stars <= max)\n          }\n          if (this.filtersData.variants && filter.type == FilterOptionTypes.VARIANTS) {\n            freshFilterData.variants = this.filtersData.variants;\n          }\n          if (this.filtersData[filter.key] && filter.type !== FilterOptionTypes.VARIANTS) {\n            freshFilterData[filter.key] = this.filtersData[filter.key];\n          }\n          let searchParams = new URLSearchParams(window.location.search);\n          let hasFilters = false;\n          for (let key of searchParams.keys()) {\n            if (key.includes('filters')) {\n              hasFilters = true;\n              break; // No need to continue checking once a match is found\n            }\n          }\n          if (salla.config.get('page.slug') == \"product.index\" && Object.keys(freshFilterData).length == 0 && !hasFilters) {\n            // Append the current category to the url if there are no pre-selected filters\n            let currentUrl = window.location.href;\n            let filterValue = salla.config.get('page.id');\n            let separator = currentUrl.indexOf('?') !== -1 ? '&' : '?';\n            let newUrl = currentUrl + separator + 'filters[category_id]=' + filterValue;\n            freshFilterData.category_id = filterValue;\n            window.history.pushState({ path: newUrl }, '', newUrl);\n          }\n          return filter;\n        });\n      this.filtersData = freshFilterData;\n      this.host.childNodes.forEach(async (widget: HTMLSallaFiltersWidgetElement) => widget.setWidgetHeight && await widget.setWidgetHeight())\n    });\n  }\n\n  async componentWillLoad() {\n    try {\n      const searchParams = new URLSearchParams(window.location.search);\n      this.filtersData = await Helper.extractFiltersFromUrl(searchParams);\n    } catch (e) {\n      console.warn('failed to get filters from URL', e.message);\n    }\n  }\n\n\n  @Element() host: HTMLElement;\n\n  /**\n   * Array of filter options\n   */\n  @Prop({ reflect: true, mutable: true }) filters?: Filter[];\n\n  private isReady = false;//to avoid triggering the changed event\n\n  @State() isSidebarOpen: boolean;\n  @State() filtersData: object | any = {}\n  @State() apply: string;\n  @State() reset: string;\n\n  /**\n   * Custom event fired when the selected filters are changed.\n   */\n  @Event() changed: EventEmitter;\n\n  /**\n   * Method to get filter data.\n   */\n  @Method()\n  async getFilters() {\n    return this.filtersData;\n  }\n\n  /**\n   * Apply filter action.\n   */\n  @Method()\n  async applyFilters() {\n    if (!this.isReady) {\n      return;\n    }\n    let hasFilters = Object.keys(this.filtersData).length > 0;\n    setTimeout(() => {\n      if (hasFilters) {\n        let url = new URL(window.location.href);\n        for (const [key] of url.searchParams.entries()) {\n          if (key.startsWith(\"filters\")) {\n            url.searchParams.delete(key);\n          }\n        }\n        let encodedFilterValues = this.encodeFilters(this.filtersData)\n        let sanitizedFilterValues = url.search.split(\"&\").filter(item => !item.includes('filters')).join(\"&\")\n        if (!!sanitizedFilterValues) {\n          url.search = url.search.split(\"&filters\")[0] + \"&\" + encodedFilterValues\n        } else {\n          url.search = `?${encodedFilterValues}`\n        }\n        window.history.pushState({}, '', url.href);\n      }\n      else {\n        let url = new URL(window.location.href);\n        url.searchParams?.delete('filters');\n        window.history.pushState({}, '', url.toString());\n      }\n      salla.event.emit('salla-filters::changed', this.filtersData);\n      this.changed.emit(this.filtersData);\n    }, 300);\n  }\n\n\n  private encodeFilters(filters, parentKey = 'filters') {\n    const encodedFilters = [];\n\n    for (const key in filters) {\n      if (Object.prototype.hasOwnProperty.call(filters, key)) {\n        const value = filters[key];\n\n        const fullKey = parentKey ? `${parentKey}[${key}]` : key;\n        if (Array.isArray(value)) {\n          for (let i = 0; i < value.length; i++) {\n            encodedFilters.push(`${fullKey}[${i}]=${value[i]}`)\n          }\n        }\n        else if (typeof value === 'object' && value !== null) {\n          encodedFilters.push(this.encodeFilters(value, fullKey));\n        } else {\n          // const encodedKey = encodeURIComponent(fullKey);\n          // const encodedValue = encodeURIComponent(value);\n          let result = `${fullKey}=${value}`\n          encodedFilters.push(result);\n        }\n      }\n    }\n    return encodedFilters.join('&');\n  };\n\n  /**\n   * Reset selected filters.\n   */\n  @Method()\n  async resetFilters() {\n    this.removeFiltersQueryParams()\n    this.filtersData = {};\n    this.host.childNodes.forEach((widget: HTMLSallaFiltersWidgetElement) => widget.reset && widget.reset())\n    salla.event.emit('salla-filters::reset');\n    return this.applyFilters();\n  }\n\n  private removeFiltersQueryParams() {\n    const searchParams = new URLSearchParams(window.location.search);\n\n    const newUrl = Array.from(searchParams.keys())\n      .filter(key => !key.startsWith('filters['))\n      .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(searchParams.get(key))}`)\n      .join('&');\n\n    const finalUrl = newUrl ? `${window.location.pathname}?${newUrl}` : window.location.pathname;\n    window.history.pushState({}, '', finalUrl);\n  }\n\n  /**\n   * @param {{target:HTMLInputElement}} event\n   * @param option\n   * @param value\n   * @private\n   */\n  private handleOptionChange(event, option: Filter, value) {\n    if (option.type === FilterOptionTypes.RANGE) {\n      this.filtersData[option.key] = value;\n\n    }\n    let isChecked = event.target.checked;\n\n    if (option.type === FilterOptionTypes.VARIANTS) {\n      this.filtersData.variants = this.filtersData.variants || {};\n      isChecked && (this.filtersData.variants[option.key] = value);\n      isChecked || (delete this.filtersData.variants[option.key]);\n    }\n\n    else if (event.target.type == \"radio\") {\n      isChecked && (this.filtersData[option.key] = value);\n      isChecked || (delete this.filtersData[option.key]);\n    }\n\n    //it's checkbox\n    // add if condition to avoid error when the filter is not existed in the filtersData\n    else if (event.target.type == \"checkbox\") {\n      this.filtersData[option.key] = this.filtersData[option.key] || [];\n      if (isChecked) {\n        this.filtersData[option.key].push(value);\n\n      }\n      this.filtersData[option.key] = this.filtersData[option.key].filter(val => val != value);\n    }\n    this.applyFilters();\n  }\n\n\n\n  render() {\n    return <Host>\n      {this.filters?.map(option => <salla-filters-widget\n        option={option}\n        filtersData={this.filtersData}\n        onChanged={({ detail: { event, option, value } }) => this.handleOptionChange(event, option, value)} />)}\n\n      {this.filters?.length ? <div class=\"s-filters-footer\">\n        {/* <salla-button color='primary' onClick={() => this.applyFilters()}>{this.apply}</salla-button> */}\n        <salla-button color='gray' fill='outline' onClick={() => this.resetFilters()}>{this.reset}</salla-button>\n      </div> : ''}\n    </Host>;\n  }\n\n  componentDidLoad() {\n    this.isReady = true;\n  }\n}\n\n"],"mappings":"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"}