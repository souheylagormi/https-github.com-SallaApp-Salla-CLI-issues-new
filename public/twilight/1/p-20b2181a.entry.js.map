{"version":3,"names":["sallaFiltersWidgetCss","SallaFiltersWidget","this","initHeight","salla","config","get","connectedCallback","withLoadMore","option","key","Array","isArray","values","length","onReady","page","lang","onLoaded","showMoreLabel","getWithDefault","showLessLabel","componentDidLoad","widgetValues","scrollHeight","style","maxHeight","widgetContent","height","setWidgetHeight","delay","removeAttribute","setTimeout","currentWidgetHeight","offsetHeight","reset","type","FilterOptionTypes","RANGE","priceRange","from","host","querySelectorAll","forEach","input","checked","showMore","isShowMore","toggleWidget","isOpen","Helper","toggleElementClassIf","renderFilterOption","VALUES","MINIMUM","VARIANTS","includes","map","filterOption","index","value","h","class","htmlFor","id","name","isSelectedOption","onChange","e","changed","emit","event","getOptionLabel","filtersData","Object","keys","min","max","Number","size","label","render","Host","onClick","ref","el","onChanged","detail","price"],"sources":["src/components/salla-filters-widget/salla-filters-widget.scss?tag=salla-filters-widget","src/components/salla-filters-widget/salla-filters-widget.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n","import { Component, Host, h, Method, State, Prop, Event, Element } from '@stencil/core';\nimport Helper from '../../Helpers/Helper';\nimport { Filter, FilterOptionTypes } from \"../salla-filters/interfaces\";\n\n@Component({\n  tag: 'salla-filters-widget',\n  styleUrl: 'salla-filters-widget.scss',\n})\nexport class SallaFiltersWidget {\n  @Element() host: HTMLElement;\n\n  /**\n   * Show more or less filter options.\n   */\n  @Prop({ mutable: true }) withLoadMore: boolean;\n\n  /**\n   * Selected filter options value.\n   */\n  @Prop({ reflect: true }) filtersData: object;\n\n  /**\n   * Filter option along with possible values.\n   */\n  @Prop({ reflect: true }) option: Filter;\n\n\n  priceRange: HTMLSallaPriceRangeElement\n\n\n  private widgetValues: HTMLElement;\n  private widgetContent: HTMLDivElement;\n  private initHeight: number = 195;\n\n  @State() isOpen: boolean = true;\n  @State() isShowMore: boolean = false;\n  @State() showMoreLabel: string = \"عرض المزيد\";\n  @State() showLessLabel: string = \"عرض أقل\";\n  @State() page: any = salla.config.get('page');\n\n  /**\n   * Custom event emitted up on filter option selection changes.\n   */\n  @Event() changed: any;\n\n  connectedCallback() {\n    //lets be smart and don't show 5 and more link for 8 options\n    this.withLoadMore = this.option.key != 'price' && Array.isArray(this.option.values) && this.option.values.length > 8;\n    salla.onReady(() => {\n      this.page = salla.config.get('page');\n    })\n    salla.lang.onLoaded(() => {\n      this.showMoreLabel = salla.lang.getWithDefault('common.titles.more', this.showMoreLabel)\n      this.showLessLabel = salla.lang.getWithDefault('common.elements.show_less', this.showLessLabel)\n    })\n  }\n\n  componentDidLoad() {\n    this.widgetValues.scrollHeight < this.initHeight && (this.withLoadMore = false);\n    (this.withLoadMore && this.widgetValues) && (this.widgetValues.style.maxHeight = `${this.initHeight}px`);\n    this.widgetContent.style.height = `${this.widgetContent.scrollHeight}px`;\n  }\n\n  /**\n * Asynchronously sets the height of a widget element to its current height, allowing for smooth transitions.\n * This function is often used in scenarios where the widget's content changes dynamically, and animating\n * the height adjustment is desired for a smoother user experience.\n *\n * @param {number} [delay=250] - Optional. The delay (in milliseconds) before updating the widget height.\n *                               Defaults to 250 milliseconds.\n *\n * @returns {Promise<void>} - A Promise that resolves once the widget height is set after the specified delay.\n *\n * @example\n * // Set widget height with the default delay (250 milliseconds)\n * await setWidgetHeight();\n *\n * // Set widget height with a custom delay (e.g., 500 milliseconds)\n * await setWidgetHeight(500);\n */\n  @Method()\n  async setWidgetHeight(delay = 250) {\n    this.widgetContent.removeAttribute('style');\n    setTimeout(() => {\n      let currentWidgetHeight: number = this.widgetContent.offsetHeight;\n      this.widgetContent.style.height = currentWidgetHeight + 'px';\n    }, delay)\n  }\n\n  /**\n   * Reset selected filter options.\n   */\n  @Method()\n  async reset() {\n    if (this.option.type === FilterOptionTypes.RANGE) {\n      this.priceRange.reset()\n    }\n    Array.from(this.host.querySelectorAll('input')).forEach(input => input.checked = false);\n  }\n\n\n  /**\n   * Action to show more or less filter options.\n   */\n  @Method()\n  async showMore() {\n    this.isShowMore = !this.isShowMore\n    this.widgetContent.style.height = 'auto';\n    this.widgetValues.style.maxHeight = this.isShowMore ? `${this.widgetValues.scrollHeight}px` : `${this.initHeight}px`;\n    setTimeout(() => {\n      this.widgetContent.style.height = `${this.widgetContent.scrollHeight}px`;\n    }, 400); // get height after time of collapse animtion (duration-300)\n  }\n\n  /**\n   * Action to toggle widget open or closed (expand/ collapse).\n   */\n  @Method()\n  async toggleWidget() {\n    this.isOpen = !this.isOpen;\n    Helper.toggleElementClassIf(this.widgetContent, 's-filters-widget-opened', 's-filters-widget-closed', () => this.isOpen);\n  }\n\n  renderFilterOption(option: Filter) {\n    if (![FilterOptionTypes.VALUES, FilterOptionTypes.MINIMUM, FilterOptionTypes.VARIANTS].includes(option.type)) {\n      return '';\n    }\n    //@ts-ignore\n    return option.values.map((filterOption, index) => {\n      let value = typeof filterOption == 'number' ? filterOption : (filterOption.key || filterOption.value);\n      return <label class=\"s-filters-label\" htmlFor={`${option.key}-option-${index}`}>\n        <input\n          id={`${option.key}-option-${index}`}\n          name={option.key}\n          type=\"radio\"\n          checked={this.isSelectedOption(option, value)}\n          class={`s-filters-radio`}\n          onChange={e => this.changed.emit({ event: e, option: option, value: value })}\n        />\n        {this.getOptionLabel(option, filterOption)}\n      </label>\n    }\n    )\n\n  }\n  private isSelectedOption(option: Filter, value: any): boolean {\n    if (option.type === FilterOptionTypes.MINIMUM) {\n      return this.filtersData[option.key] == value;\n    }\n    if (option.type === FilterOptionTypes.VARIANTS) {\n      return this.filtersData[option.type] && this.filtersData[option.type][Object.keys(this.filtersData[option.type])[0]] == value;\n    }\n    if (option.type === FilterOptionTypes.RANGE) {\n      return this.filtersData[option.key] && this.filtersData[option.key].min == value.min && this.filtersData[option.key].max == value.max;\n    }\n\n    if (option.type === FilterOptionTypes.VALUES) {\n      return this.filtersData[option.key] && Number(this.filtersData[option.key]) == Number(value);\n    }\n    return false;\n  }\n\n\n\n  private getOptionLabel(option: Filter, filterOption) {\n    if (option.key == 'rating') {\n      //in amazon has stars & up, should we add it, to avoid those people who will come to say I selected 4 why I see 5 sars products\n      return <salla-rating-stars size=\"small\" value={filterOption} />;\n    }\n    let label = filterOption.value || 'null';\n    //label+=filterOption.count ? ` (${salla.helpers.number(filterOption.count)})` : '';\n    return <span class=\"s-filters-option-name\">{label}</span>;\n  }\n\n  render() {\n    return (\n      <Host class=\"s-filters-widget-container\">\n        <h3 class=\"s-filters-widget-title\" onClick={() => this.toggleWidget()}>\n          <span>{this.option.label}</span>\n          <span class={`s-filters-widget-plusminus ${this.isOpen ? 's-filters-widget-plusminus-active' : ''}`} />\n        </h3>\n        <div class=\"s-filters-widget-content\" ref={(el) => this.widgetContent = el}>\n          <div class=\"s-filters-widget-values\" ref={(el) => this.widgetValues = el}>\n            <slot />\n            {\n              this.option.type !== FilterOptionTypes.RANGE\n                ? this.renderFilterOption(this.option)\n                : <salla-price-range onChanged={(event) => this.changed.emit(event.detail)}\n                  ref={price => this.priceRange = price}\n                  filtersData={this.filtersData}\n                  option={this.option} />\n            }\n          </div>\n          {this.withLoadMore &&\n            <a class=\"s-filters-widget-more\"\n              onClick={() => this.showMore()}>{!this.isShowMore ? this.showMoreLabel : this.showLessLabel}</a>\n          }\n        </div>\n      </Host>\n    );\n  }\n\n}\n"],"mappings":"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"}