{"version":3,"names":["salla","event","setMaxListeners","Helper","toggleElementClassIf","element","classes1","classes2","callback","Array","isArray","split","isClasses1","classList","remove","add","this","toggleClassIf","selector","document","querySelectorAll","forEach","isValidEmail","email","re","test","String","toLowerCase","filterEmojies","text","characterFilter","replace","debounce","fn","data","debounce_","helpers","innerData","getProductsSource","source","config","get","getPageTitleForSource","brands","latest","offers","sales","lang","getProductsSourceValue","sourceValue","parsedSource","parsedSourceValue","JSON","parse","error","console","includes","length","URLSearchParams","window","location","search","extractFiltersFromUrl","searchParams","filters","value","key","matchesNested","match","filterName","nestedKey","matchesSimple","onSallaReadyPromise","Promise","resolve","onReady","fetchProducts","source_value","limit","product","api","fetch","Helper$1"],"sources":["src/Helpers/Helper.ts"],"sourcesContent":["import { ProductResponse } from \"@salla.sa/twilight/types/api/product\";\n\n//TODO::reduce it to 10\nsalla.event.setMaxListeners(100);\n\nclass Helper {\n  private debounce_: any;\n\n  toggleElementClassIf(element, classes1, classes2, callback) {\n    classes1 = Array.isArray(classes1) ? classes1 : classes1.split(' ');\n    classes2 = Array.isArray(classes2) ? classes2 : classes2.split(' ');\n    let isClasses1 = callback(element);\n    element?.classList.remove(...(isClasses1 ? classes2 : classes1));\n    element?.classList.add(...(isClasses1 ? classes1 : classes2));\n    return this;\n  }\n\n  toggleClassIf(selector, classes1, classes2, callback) {\n    document.querySelectorAll(selector).forEach(element => this.toggleElementClassIf(element, classes1, classes2, callback));\n    return this;\n  }\n\n  isValidEmail(email) {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  filterEmojies(text) {\n    var characterFilter = /(?:[\\u2700-\\u27bf]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\u0023-\\u0039]\\ufe0f?\\u20e3|\\u3299|\\u3297|\\u303d|\\u3030|\\u24c2|\\ud83c[\\udd70-\\udd71]|\\ud83c[\\udd7e-\\udd7f]|\\ud83c\\udd8e|\\ud83c[\\udd91-\\udd9a]|\\ud83c[\\udde6-\\uddff]|\\ud83c[\\ude01-\\ude02]|\\ud83c\\ude1a|\\ud83c\\ude2f|\\ud83c[\\ude32-\\ude3a]|\\ud83c[\\ude50-\\ude51]|\\u203c|\\u2049|[\\u25aa-\\u25ab]|\\u25b6|\\u25c0|[\\u25fb-\\u25fe]|\\u00a9|\\u00ae|\\u2122|\\u2139|\\ud83c\\udc04|[\\u2600-\\u26FF]|\\u2b05|\\u2b06|\\u2b07|\\u2b1b|\\u2b1c|\\u2b50|\\u2b55|\\u231a|\\u231b|\\u2328|\\u23cf|[\\u23e9-\\u23f3]|[\\u23f8-\\u23fa]|\\ud83c\\udccf|\\u2934|\\u2935|[\\u2190-\\u21ff])/g;\n    return text.replace(characterFilter, \"\");\n  }\n\n  debounce(fn, ...data) {\n    if (!this.debounce_) {\n      this.debounce_ = salla.helpers.debounce((callback, ...innerData) => callback(...innerData), 500);\n    }\n    //@ts-ignore\n    return this.debounce_(fn, ...data);\n  }\n\n  getProductsSource(source) {\n    return {\n      'brands.single': 'brands',\n      'product.index': 'categories',\n      'product.index.latest': 'latest',\n      'product.index.offers': 'offers',\n      'product.index.search': 'search',\n      'customer.wishlist': 'wishlist',\n      'landing-page': 'landing-page',\n      'product.index.tag': 'tags',\n      'product.index.sales': 'sales',\n      'components.most_sales_products': 'sales',//temporary, delete it after two days from now\n    }[source || salla.config.get('page.slug')] || source || 'latest';\n  }\n\n  getPageTitleForSource(source){\n    \n    source= {\n      'brands':'common.titles.brands',\n      // 'categories':'',\n      'latest':'blocks.home.latest_products',\n      'offers':'common.titles.discounts',\n      // 'search':'',\n      // 'landing-page':'',\n      // 'tags':'',\n      'sales':'common.titles.most_sales',\n    }[source];\n\n    return source ? salla.lang.get(source):'';\n  }\n\n  getProductsSourceValue(source, sourceValue) {\n    const parsedSource = this.getProductsSource(source);\n\n      // Validate if the source value is a valid JSON string\n      let parsedSourceValue: any = null;\n      if (sourceValue) {\n        try {\n          parsedSourceValue = JSON.parse(sourceValue);\n        } catch (error) {\n          console.error('Invalid JSON string in sourceValue:', error);\n        }\n      }\n\n    // Handle different source types\n    if (!['search', 'json', 'offers', 'latest', 'sales', 'related'].includes(parsedSource)) {\n\n      if (Array.isArray(parsedSourceValue) && parsedSourceValue.length) {\n        return parsedSourceValue;\n      }\n      \n      if (Array.isArray(parsedSourceValue) && !parsedSourceValue.length){\n        return '';\n      }\n\n      if (typeof parsedSourceValue === 'number') {\n        return [parsedSourceValue];\n      }\n\n      if (!sourceValue && ['categories', 'tags', 'brands'].includes(source)) {\n        return [salla.config.get('page.id')];\n      }\n    }\n\n    // Return sourceValue if it exists and is a valid JSON object/array\n    if (parsedSourceValue || sourceValue) {\n      return parsedSourceValue || sourceValue;\n    }\n\n    if (parsedSource === 'search') {\n      return new URLSearchParams(window.location.search).get('q') || '';\n    }\n\n    // Return page id as default value\n    return salla.config.get('page.id');\n  }\n\n  extractFiltersFromUrl(searchParams) {\n    let filters = {};\n    searchParams.forEach((value, key) => {\n      // Handle filters[xxx] format\n      const matchesNested = key.match(/^filters\\[(.*?)\\](\\[(.*?)\\])?$/u);\n\n      if (matchesNested) {\n        const filterName = matchesNested[1];\n        const nestedKey = matchesNested[3];\n\n        if (nestedKey) {\n          // Handle nested object\n          filters[filterName] = filters[filterName] || {};\n          filters[filterName][nestedKey] = value;\n        } else {\n          // Handle regular key\n          filters[filterName] = value;\n        }\n      } else {\n        // Handle simple key-value pairs\n        const matchesSimple = key.match(/^(.*?)$/u);\n\n        if (matchesSimple) {\n          filters[matchesSimple[1]] = value;\n        }\n      }\n    });\n    return filters;\n  }\n\n  /**\n   * We needed this function to help us avoid requesting the products list before salla is ready,\n   * was causing a strange issues in live for the bad connections ex: not loading the dom, requesting api without storeIdentefire\n   */\n  onSallaReadyPromise(callback): Promise<any>{\n    return new Promise((resolve)=>salla.onReady(() => resolve(callback())));\n  }\n\n  /**\n   * \n   * let's make sure to send the request only when salla is ready\n   */\n  fetchProducts(source, source_value, limit): Promise<ProductResponse.lists>\n  {\n    return this.onSallaReadyPromise(()=>salla.product.api.fetch({source:source, source_value:source_value, limit:limit}));\n  }\n}\n\nexport default new Helper;\n"],"mappings":"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"}