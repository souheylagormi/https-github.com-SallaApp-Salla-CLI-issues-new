{"version":3,"names":["sallaFiltersCss","SallaFilters","exports","class_1","hostRef","_this","this","isReady","salla","event","on","host","style","display","lang","onLoaded","apply","get","reset","_c","filters","freshFilterData","map","filter","label","category_id","brand_id","rating","price","key","type","FilterOptionTypes","VALUES","values","max_1","max","min_1","min","stars","filtersData","variants","VARIANTS","searchParams","URLSearchParams","window","location","search","hasFilters","_i","_d","keys","length","includes","config","Object","currentUrl","href","filterValue","separator","indexOf","newUrl","history","pushState","path","childNodes","forEach","widget","__awaiter","__generator","setWidgetHeight","sent","prototype","componentWillLoad","Helper","extractFiltersFromUrl","console","warn","e_1","message","getFilters","applyFilters","setTimeout","url","URL","entries","startsWith","delete","encodedFilterValues","encodeFilters","sanitizedFilterValues","split","item","join","concat","_a","toString","emit","changed","parentKey","encodedFilters","hasOwnProperty","call","value","fullKey","Array","isArray","i","push","result","resetFilters","removeFiltersQueryParams","from","encodeURIComponent","finalUrl","pathname","handleOptionChange","option","RANGE","isChecked","target","checked","val","render","h","Host","onChanged","detail","_b","class","color","fill","onClick","componentDidLoad"],"sources":["src/components/salla-filters/salla-filters.scss?tag=salla-filters","src/components/salla-filters/salla-filters.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n\n.s-rating-stars-small {\n  line-height: 12px;\n}\n.s-filters-radio{\n  background-image: none !important;\n}","import { Component, Element, h, Event, EventEmitter, Host, Method, Prop, State } from '@stencil/core';\nimport { Filter, FilterOptionTypes } from \"./interfaces\";\nimport Helper from '../../Helpers/Helper';\n@Component({\n  tag: 'salla-filters',\n  styleUrl: 'salla-filters.scss',\n})\nexport class SallaFilters {\n\n  constructor() {\n    salla.event.on('filters::hidden', () => this.host.style.display = 'none');\n\n    salla.lang.onLoaded(() => {\n      this.apply = salla.lang.get('pages.checkout.apply');\n      this.reset = salla.lang.get('pages.categories.filters_reset');\n    });\n\n    salla.event.on('filters::fetched', ({ filters }) => {\n      this.host.style.display = '';\n      let freshFilterData: any = {};\n      this.filters = filters\n        .map((filter: Filter) => {\n          filter.label = {\n            category_id: salla.lang.get('common.titles.categories'),\n            brand_id: salla.lang.get('common.titles.brands'),\n            rating: salla.lang.get('pages.categories.filter_rating'),\n            price: salla.lang.get('pages.categories.filter_price'),\n          }[filter.key] || filter.label;\n          // filter.type = FilterOptionTypes.VALUES;\n          if (filter.key == 'rating') {\n            filter.type = FilterOptionTypes.VALUES;\n            //@ts-ignore\n            let { max, min } = filter.values;\n            //@ts-ignore\n            filter.values = [5, 4, 3, 2, 1].filter(stars => stars >= min || stars <= max)\n          }\n          if (this.filtersData.variants && filter.type == FilterOptionTypes.VARIANTS) {\n            freshFilterData.variants = this.filtersData.variants;\n          }\n          if (this.filtersData[filter.key] && filter.type !== FilterOptionTypes.VARIANTS) {\n            freshFilterData[filter.key] = this.filtersData[filter.key];\n          }\n          let searchParams = new URLSearchParams(window.location.search);\n          let hasFilters = false;\n          for (let key of searchParams.keys()) {\n            if (key.includes('filters')) {\n              hasFilters = true;\n              break; // No need to continue checking once a match is found\n            }\n          }\n          if (salla.config.get('page.slug') == \"product.index\" && Object.keys(freshFilterData).length == 0 && !hasFilters) {\n            // Append the current category to the url if there are no pre-selected filters\n            let currentUrl = window.location.href;\n            let filterValue = salla.config.get('page.id');\n            let separator = currentUrl.indexOf('?') !== -1 ? '&' : '?';\n            let newUrl = currentUrl + separator + 'filters[category_id]=' + filterValue;\n            freshFilterData.category_id = filterValue;\n            window.history.pushState({ path: newUrl }, '', newUrl);\n          }\n          return filter;\n        });\n      this.filtersData = freshFilterData;\n      this.host.childNodes.forEach(async (widget: HTMLSallaFiltersWidgetElement) => widget.setWidgetHeight && await widget.setWidgetHeight())\n    });\n  }\n\n  async componentWillLoad() {\n    try {\n      const searchParams = new URLSearchParams(window.location.search);\n      this.filtersData = await Helper.extractFiltersFromUrl(searchParams);\n    } catch (e) {\n      console.warn('failed to get filters from URL', e.message);\n    }\n  }\n\n\n  @Element() host: HTMLElement;\n\n  /**\n   * Array of filter options\n   */\n  @Prop({ reflect: true, mutable: true }) filters?: Filter[];\n\n  private isReady = false;//to avoid triggering the changed event\n\n  @State() isSidebarOpen: boolean;\n  @State() filtersData: object | any = {}\n  @State() apply: string;\n  @State() reset: string;\n\n  /**\n   * Custom event fired when the selected filters are changed.\n   */\n  @Event() changed: EventEmitter;\n\n  /**\n   * Method to get filter data.\n   */\n  @Method()\n  async getFilters() {\n    return this.filtersData;\n  }\n\n  /**\n   * Apply filter action.\n   */\n  @Method()\n  async applyFilters() {\n    if (!this.isReady) {\n      return;\n    }\n    let hasFilters = Object.keys(this.filtersData).length > 0;\n    setTimeout(() => {\n      if (hasFilters) {\n        let url = new URL(window.location.href);\n        for (const [key] of url.searchParams.entries()) {\n          if (key.startsWith(\"filters\")) {\n            url.searchParams.delete(key);\n          }\n        }\n        let encodedFilterValues = this.encodeFilters(this.filtersData)\n        let sanitizedFilterValues = url.search.split(\"&\").filter(item => !item.includes('filters')).join(\"&\")\n        if (!!sanitizedFilterValues) {\n          url.search = url.search.split(\"&filters\")[0] + \"&\" + encodedFilterValues\n        } else {\n          url.search = `?${encodedFilterValues}`\n        }\n        window.history.pushState({}, '', url.href);\n      }\n      else {\n        let url = new URL(window.location.href);\n        url.searchParams?.delete('filters');\n        window.history.pushState({}, '', url.toString());\n      }\n      salla.event.emit('salla-filters::changed', this.filtersData);\n      this.changed.emit(this.filtersData);\n    }, 300);\n  }\n\n\n  private encodeFilters(filters, parentKey = 'filters') {\n    const encodedFilters = [];\n\n    for (const key in filters) {\n      if (Object.prototype.hasOwnProperty.call(filters, key)) {\n        const value = filters[key];\n\n        const fullKey = parentKey ? `${parentKey}[${key}]` : key;\n        if (Array.isArray(value)) {\n          for (let i = 0; i < value.length; i++) {\n            encodedFilters.push(`${fullKey}[${i}]=${value[i]}`)\n          }\n        }\n        else if (typeof value === 'object' && value !== null) {\n          encodedFilters.push(this.encodeFilters(value, fullKey));\n        } else {\n          // const encodedKey = encodeURIComponent(fullKey);\n          // const encodedValue = encodeURIComponent(value);\n          let result = `${fullKey}=${value}`\n          encodedFilters.push(result);\n        }\n      }\n    }\n    return encodedFilters.join('&');\n  };\n\n  /**\n   * Reset selected filters.\n   */\n  @Method()\n  async resetFilters() {\n    this.removeFiltersQueryParams()\n    this.filtersData = {};\n    this.host.childNodes.forEach((widget: HTMLSallaFiltersWidgetElement) => widget.reset && widget.reset())\n    salla.event.emit('salla-filters::reset');\n    return this.applyFilters();\n  }\n\n  private removeFiltersQueryParams() {\n    const searchParams = new URLSearchParams(window.location.search);\n\n    const newUrl = Array.from(searchParams.keys())\n      .filter(key => !key.startsWith('filters['))\n      .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(searchParams.get(key))}`)\n      .join('&');\n\n    const finalUrl = newUrl ? `${window.location.pathname}?${newUrl}` : window.location.pathname;\n    window.history.pushState({}, '', finalUrl);\n  }\n\n  /**\n   * @param {{target:HTMLInputElement}} event\n   * @param option\n   * @param value\n   * @private\n   */\n  private handleOptionChange(event, option: Filter, value) {\n    if (option.type === FilterOptionTypes.RANGE) {\n      this.filtersData[option.key] = value;\n\n    }\n    let isChecked = event.target.checked;\n\n    if (option.type === FilterOptionTypes.VARIANTS) {\n      this.filtersData.variants = this.filtersData.variants || {};\n      isChecked && (this.filtersData.variants[option.key] = value);\n      isChecked || (delete this.filtersData.variants[option.key]);\n    }\n\n    else if (event.target.type == \"radio\") {\n      isChecked && (this.filtersData[option.key] = value);\n      isChecked || (delete this.filtersData[option.key]);\n    }\n\n    //it's checkbox\n    // add if condition to avoid error when the filter is not existed in the filtersData\n    else if (event.target.type == \"checkbox\") {\n      this.filtersData[option.key] = this.filtersData[option.key] || [];\n      if (isChecked) {\n        this.filtersData[option.key].push(value);\n\n      }\n      this.filtersData[option.key] = this.filtersData[option.key].filter(val => val != value);\n    }\n    this.applyFilters();\n  }\n\n\n\n  render() {\n    return <Host>\n      {this.filters?.map(option => <salla-filters-widget\n        option={option}\n        filtersData={this.filtersData}\n        onChanged={({ detail: { event, option, value } }) => this.handleOptionChange(event, option, value)} />)}\n\n      {this.filters?.length ? <div class=\"s-filters-footer\">\n        {/* <salla-button color='primary' onClick={() => this.applyFilters()}>{this.apply}</salla-button> */}\n        <salla-button color='gray' fill='outline' onClick={() => this.resetFilters()}>{this.reset}</salla-button>\n      </div> : ''}\n    </Host>;\n  }\n\n  componentDidLoad() {\n    this.isReady = true;\n  }\n}\n\n"],"mappings":"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"}