{"version":3,"names":["sallaPriceRangeCss","SallaPriceRange","this","filterValues","setTimeout","connectedCallback","filtersData","_a","price","minPrice","min","maxPrice","max","salla","lang","onLoaded","moreThanLabel","getWithDefault","lessThanLabel","toLabel","fromLabel","option","values","length","chunkSize","Math","ceil","i","push","slice","reduce","final","currentValue","to","count","reset","minInput","value","maxInput","getPriceLabel","filterValue","isNaN","from","money","handleMinMaxPrice","event","changedEventHandler","isMin","typing","helpers","inputDigitsOnly","target","clearTimeout","debounce","minInputValidation","maxInputValidation","isReady","changed","emit","isChecked","isMinEqual","isMaxEqual","render","h","Host","map","index","class","htmlFor","key","id","name","type","checked","onChange","e","config","currency","symbol","maxlength","ref","el","onInput","placeholder","componentDidLoad"],"sources":["src/components/salla-price-range/salla-price-range.scss?tag=salla-price-range","src/components/salla-price-range/salla-price-range.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n\n\n.rtl, [dir=\"rtl\"] {\n  .rtl-range-slider {\n      transform: rotateY(180deg);\n  }\n\n  .rtl-range-numbers{\n      flex-direction: row-reverse;\n  }\n\n  .form-select, select{\n      background-position: left 0.5rem center;\n      padding-right: 12px;\n  }   \n\n  // divide\n.menu-divide {\n  li {\n      &:not(:last-child) {\n          &:after {\n              left: 0;\n              right: auto;\n          }\n      }\n  }\n}\n}\n\ninput[type=range]::-webkit-slider-thumb {\n  pointer-events: all;\n  width: 24px;\n  height: 24px;\n  -webkit-appearance: none;\n}\n\n[type='checkbox']:checked{\n  background-size: 80%;\n}","import { Component, Host, h, State, Prop, Event, Method } from '@stencil/core';\nimport { Filter, FilterValue } from \"../salla-filters/interfaces\";\n\n@Component({\n  tag: 'salla-price-range',\n  styleUrl: 'salla-price-range.scss',\n})\nexport class SallaPriceRange {\n  /**\n   * Minimum price threshold value\n   */\n  @Prop({ mutable: true }) minPrice;\n\n  /**\n   * Maximum price threshold value\n   */\n  @Prop({ mutable: true }) maxPrice;\n\n  /**\n   * Product price range filter option object instance\n   */\n  @Prop({ reflect: true }) option: Filter;\n\n  /**\n   * Currently selected price filter data\n   */\n  @Prop({ reflect: true }) filtersData: any;\n\n\n  @State() min = 0;\n  @State() max = 10000;\n  @State() priceOptions: any;\n  @State() moreThanLabel: string = \"أكثر من\";\n  @State() lessThanLabel: string = \"أقل من\";\n  @State() toLabel: string = \"الى\";\n  @State() fromLabel: string = \"من\";\n  @State() typing: boolean = false;\n  @State() debounce: ReturnType<typeof setTimeout> = setTimeout(() => '', 1000);\n  /**\n   * Custome event emitted when there is a change in price input.\n   */\n  @Event() changed: any;\n\n  isReady: Boolean;\n  minInput: HTMLInputElement;\n  maxInput: HTMLInputElement;\n  filterValues: Array<FilterValue> = [];\n\n\n  connectedCallback() {\n    if (this.filtersData && this.filtersData?.price) {\n      this.minPrice = this.filtersData.price.min;\n      this.maxPrice = this.filtersData.price.max;\n    }\n    salla.lang.onLoaded(() => {\n      this.moreThanLabel = salla.lang.getWithDefault('common.elements.more_than', this.moreThanLabel)\n      this.lessThanLabel = salla.lang.getWithDefault('common.elements.less_than', this.lessThanLabel)\n      this.toLabel = salla.lang.getWithDefault('common.elements.to', this.toLabel)\n      this.fromLabel = salla.lang.getWithDefault('common.elements.from', this.fromLabel)\n    })\n\n    //no need to show one option only\n    if (this.option.values.length == 1) {\n      return;\n    }\n    //here we may receive too many prices, we will group all inputs to\n    if (this.option.values.length <= 5) {\n      this.filterValues = this.option.values;\n      return;\n    }\n    const chunkSize = Math.ceil(this.option.values.length / 5);\n    for (let i = 0; i < this.option.values.length; i += chunkSize) {\n      this.filterValues.push(\n        this.option.values\n          .slice(i, i + chunkSize)\n          .reduce((final: FilterValue, currentValue: FilterValue) => {\n            final.to = currentValue.to;\n            final.count += currentValue.count;\n            return final;\n          })\n      );\n      // do whatever\n    }\n  }\n\n  /**\n   * reset the price range inputs\n   */\n  @Method()\n  async reset() {\n    //@ts-ignore\n    this.minInput.value = null;\n    this.maxInput.value = null;\n  }\n\n  private getPriceLabel(filterValue: FilterValue) {\n    // @ts-ignore\n    if (isNaN(filterValue.from) || filterValue.from < 1) {\n      return `${this.lessThanLabel} ${salla.money(filterValue.to)}`;\n    }\n    // @ts-ignore\n    if (isNaN(filterValue.to) || filterValue.to < 1) {\n      return `${this.moreThanLabel} ${salla.money(filterValue.from)}`;\n    }\n\n    return `${salla.money(filterValue.from)} ${this.toLabel} ${salla.money(filterValue.to)}`;\n  }\n\n  private handleMinMaxPrice(event: Event, value: FilterValue): void {\n\n    //todo:: cover when from is star\n    this.minPrice = value.from;\n    this.maxPrice = value.to != '*' ? value.to : \"\";\n\n    this.changedEventHandler(event);\n  }\n\n  private async changedEventHandler(event, isMin = false) {\n    this.typing = true;\n    salla.helpers.inputDigitsOnly(event.target)\n    let value = event ? event.target.value * 1 : \"\"\n    clearTimeout(this.debounce)\n    this.debounce = setTimeout(() => {\n      this.typing = false\n      if (isMin) {\n        if (!this.maxPrice && value) {\n          this.maxPrice = '';\n        }\n        this.minInputValidation(value);\n      } else {\n        if (!this.minPrice && value) {\n          this.minPrice = 0;\n        }\n        this.maxInputValidation(value)\n      }\n\n      this.isReady && this.changed.emit({\n        event: event,\n        option: this.option,\n        value: { max: this.maxPrice, min: this.minPrice }\n      })\n\n    }, 1000)\n  }\n\n\n  minInputValidation(value) {\n    if (value && (value > this.max || (this.maxPrice && value > this.maxPrice))) {\n      // this.minPrice = this.maxPrice;\n      return;\n    }\n\n    if (value < this.min) {\n      this.minPrice = this.min;\n      return;\n    }\n\n    if (value) {\n      this.minPrice = value;\n    }\n  }\n\n  maxInputValidation(value) {\n    if (value && (value < this.min || (this.minPrice && value < this.minPrice))) {\n      // this.maxPrice = this.minPrice;\n      return;\n    }\n    if (value > this.max) {\n      this.maxPrice = this.max;\n      return;\n    }\n\n    if (value) {\n      this.maxPrice = value;\n    }\n  }\n\n  private isChecked(filterValue: FilterValue) {\n    if (!this.minPrice && !this.maxPrice) {\n      return false;\n    }\n\n    //1 filterValue.from zero or * and this.minPrice not set or zero\n    //2 filterValue.from == this.minPrice\n    //@ts-ignore\n    let isMinEqual = ((filterValue.from < 1 || filterValue.from == '*') && this.minPrice == 0) || filterValue.from == this.minPrice;\n\n    //1 filterValue.to == \"*\" or null\n    //2 filterValue.to == this.max\n    let isMaxEqual = filterValue.to == '*' || !filterValue.to || filterValue.to == this.maxPrice;\n    return isMinEqual && isMaxEqual;\n  }\n\n\n  render() {\n    return (\n      <Host>\n        {\n          this.filterValues.map((filterValue: FilterValue, index: number) => {\n            return <label class=\"s-filters-label\" htmlFor={`${this.option.key}-${index}`}>\n              <input\n                id={`${this.option.key}-${index}`}\n                name=\"price\"\n                type=\"radio\"\n                checked={this.isChecked(filterValue)}\n                class=\"s-filters-radio\"\n                onChange={e => this.handleMinMaxPrice(e, filterValue)}\n              />\n              {this.getPriceLabel(filterValue)}\n            </label>\n          })\n        }\n\n\n        <div class=\"flex justify-center items-center\">\n          <div class=\"relative max-w-xl w-full\">\n            <div class=\"s-price-range-inputs\">\n              <div class=\"s-price-range-relative\">\n                <div class=\"s-price-range-currency\"> {salla.config.currency().symbol}</div>\n                <input\n                  type=\"number\"\n                  maxlength=\"5\"\n                  ref={el => this.minInput = el}\n                  onInput={(event) => this.changedEventHandler(event, true)}\n                  value={this.minPrice}\n                  placeholder={this.fromLabel}\n                  class=\"s-price-range-number-input\"\n                />\n              </div>\n\n              <div class=\"s-price-range-gray-text\"> -</div>\n              <div class=\"s-price-range-relative\">\n                <div class=\"s-price-range-currency\"> {salla.config.currency().symbol}</div>\n                <input type=\"number\" maxlength=\"5\"\n                  placeholder={this.toLabel}\n                  ref={el => this.maxInput = el}\n                  onInput={(event) => this.changedEventHandler(event)}\n                  value={this.maxPrice}\n                  class=\"s-price-range-number-input\" aria-describedby=\"price-currency\" />\n              </div>\n            </div>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n\n  componentDidLoad() {\n    this.isReady = true;\n  }\n}\n"],"mappings":"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"}